/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-08-01 09:39:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bank.model.Register;

public final class ProfileView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("bank.model.Register");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>My Profile</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("@charset \"UTF-8\";\r\n");
      out.write("@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans&family=Raleway:wght@400;700&display=swap\");\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("  font-family: \"Open Sans\", sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("  width: 1200px;\r\n");
      out.write("  max-width: 100%;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("  padding: 50px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav {\r\n");
      out.write("  display: flex;\r\n");
      out.write("  justify-content: space-between;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  border-bottom: 1px solid black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav a img {\r\n");
      out.write("  width: 200px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav ul {\r\n");
      out.write("  display: flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav li {\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  margin: 0 25px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav ul li a {\r\n");
      out.write("  color: #372cfa;\r\n");
      out.write("  font-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("nav ul li a:hover {\r\n");
      out.write("  text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".profile-info p {\r\n");
      out.write("  margin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".go-to-dashboard {\r\n");
      out.write("  display: block;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  background-color: #372cfa; /* Corrected background color */\r\n");
      out.write("  padding: 10px 20px;\r\n");
      out.write("  border-radius: 4px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".go-to-dashboard:hover {\r\n");
      out.write("  background-color: #45a049;\r\n");
      out.write("}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header class=\"container\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<a href=\"DashboardView.jsp\"><img src=\"./images/logo.png\"\r\n");
      out.write("					alt=\"logo\" /></a>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li><a href=\"DashboardView.jsp\">Dashboard</a></li>\r\n");
      out.write("					<li><a href=\"ProfileView.jsp\">Profile</a></li>\r\n");
      out.write("					<li><a href=\"login.jsp\">Log Out</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</nav>\r\n");
      out.write("		</header>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		");

            Register r = (Register)session.getAttribute("loginInfo"); 
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<h1>My Profile</h1>\r\n");
      out.write("		");

					String sucessMessagePass = (String) request.getAttribute("sucessMessagePass");
					if (sucessMessagePass != null) {
					
      out.write("\r\n");
      out.write("					<p style=\"color: green; text-align: center; font-size:20px;\">");
      out.print(sucessMessagePass);
      out.write("</p>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("		<div class=\"profile-info\">\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>First Name:</strong>\r\n");
      out.write("				");
      out.print( r.getfName() );
      out.write("</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>Last Name:</strong>\r\n");
      out.write("				");
      out.print( r.getlName() );
      out.write("</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>Account Number:</strong>\r\n");
      out.write("				");
      out.print( r.getAccNo() );
      out.write("</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>Account Balance:</strong>\r\n");
      out.write("				");
      out.print( r.getAccBal() );
      out.write("</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>User Name:</strong>\r\n");
      out.write("				");
      out.print( r.getUname() );
      out.write("</p>\r\n");
      out.write("			<div>\r\n");
      out.write("				Change Password <a href=\"ChangePasswordView.jsp\">Click Here</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<a href=\"DashboardView.jsp\" class=\"go-to-dashboard\">Go to\r\n");
      out.write("			Dashboard</a>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
