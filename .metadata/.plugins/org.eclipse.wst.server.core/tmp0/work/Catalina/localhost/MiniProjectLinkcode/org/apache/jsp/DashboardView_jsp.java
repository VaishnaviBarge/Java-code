/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.107
 * Generated at: 2025-08-01 09:39:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bank.model.Register;

public final class DashboardView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("bank.model.Register");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Dashboard</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/DashBoardStyle.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta2/css/all.min.css\" />\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

	Register r = (Register)session.getAttribute("loginInfo");

	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<header class=\"container\">\r\n");
      out.write("		<nav>\r\n");
      out.write("			<a href=\"DashboardView.jsp\"><img src=\"./images/logo.png\"\r\n");
      out.write("				alt=\"logo\" /></a>\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li><a href=\"DashboardView.jsp\">Dashboard</a></li>\r\n");
      out.write("				<li><a href=\"ProfileView.jsp\">Profile</a></li>\r\n");
      out.write("				<li><a class=\"logout-btn\" href=\"login.jsp\">Log Out</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav>\r\n");
      out.write("		<div class=\"hero\">\r\n");
      out.write("			<section class=\"hero-left\">\r\n");
      out.write("				<h2 class=\"welcome-text\"\r\n");
      out.write("					style=\"color: #298AC2; margin-bottom: 10px;\">\r\n");
      out.write("					Welcome <strong style=\"color: #749B29;\">");
      out.print( r.getfName() );
      out.write("\r\n");
      out.write("						");
      out.print(r.getlName() );
      out.write("</strong>\r\n");
      out.write("				</h2>\r\n");
      out.write("				<h1>Effortless Banking: Pay Bills, Recharge, and Transfer Funds\r\n");
      out.write("					Seamlessly.</h1>\r\n");
      out.write("				<p>Experience the ultimate convenience in managing your finances\r\n");
      out.write("					with our all-in-one banking app.</p>\r\n");
      out.write("\r\n");
      out.write("				<a href=\"ProfileView.jsp\">View Profile</a>\r\n");
      out.write("			</section>\r\n");
      out.write("\r\n");
      out.write("			<section class=\"right\">\r\n");
      out.write("				<img src=\"images/undraw_mobile_pay_re_sjb8.svg\"\r\n");
      out.write("					alt=\"Hero illustration\" />\r\n");
      out.write("			</section>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"card-container\">\r\n");
      out.write("		<div class=\"account-card\">\r\n");
      out.write("			<h2>Account Details</h2>\r\n");
      out.write("			");

			 	Float updatedBal = (Float)session.getAttribute("updatedBal");
			if (updatedBal == null) {
	            updatedBal = r.getAccBal(); // 
	        }
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");

					String sucessMessage = (String) request.getAttribute("sucessMsgFund");
					if (sucessMessage != null) {
					
      out.write("\r\n");
      out.write("			<p style=\"color: green; text-align: center;\">");
      out.print(sucessMessage);
      out.write("</p>\r\n");
      out.write("			");

					}
					
      out.write("\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>Account Number:</strong>\r\n");
      out.write("				");
      out.print( r.getAccNo());
      out.write("\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				<strong>Username :</strong>\r\n");
      out.write("				");
      out.print( r.getUname());
      out.write("\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("\r\n");
      out.write("				<strong style=\"padding-right:10px;\">Balance :- </strong>\r\n");
      out.write("				");
      out.print( updatedBal );
      out.write("<a class=\"update-Bal-Btn\" href=\"UpdateBalanceController\"><i class=\"fa-solid fa-arrows-rotate\"></i></a>\r\n");
      out.write("			</p>\r\n");
      out.write("\r\n");
      out.write("			<a class=\"add-btn\" href=\"AddFundView.jsp\">Add Funds</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"card\">\r\n");
      out.write("			<div class=\"icon\">\r\n");
      out.write("				<i class=\"fas fa-money-check-alt\"></i>\r\n");
      out.write("			</div>\r\n");
      out.write("			<h2>Pay Bills</h2>\r\n");
      out.write("			<p>Convenient bill payments</p>\r\n");
      out.write("			<a class=\"card-btn\" href=\"PayBillView.jsp\">Pay Bills</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"card\">\r\n");
      out.write("			<div class=\"icon\">\r\n");
      out.write("				<i class=\"fas fa-exchange-alt\"></i>\r\n");
      out.write("			</div>\r\n");
      out.write("			<h2>Fund Transfer</h2>\r\n");
      out.write("			<p>Quick and easy transfers</p>\r\n");
      out.write("			<a href=\"TransferFundView.jsp\">Fund Transfer</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"card\">\r\n");
      out.write("			<div class=\"icon\">\r\n");
      out.write("				<i class=\"fas fa-file-alt\"></i>\r\n");
      out.write("			</div>\r\n");
      out.write("			<h2>View Statement</h2>\r\n");
      out.write("			<p>Access your transaction history</p>\r\n");
      out.write("			<a href=\"StatementController\">View Statement</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
